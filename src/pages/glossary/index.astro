---
import Glossary from "@components/glossary.astro";
import { getCollection, type CollectionEntry } from "astro:content";
import { sortAlphabetically } from "@libs/glossary";

const glossaryTerms = await getCollection("glossary");

const glossaryTermsByLetter = glossaryTerms.reduce((result, term) => {
    const firstLetter = term.data.title.charAt(0).toUpperCase();
    if (result.has(firstLetter)) {
        result.set(firstLetter, [...result.get(firstLetter)!, term]);
    } else {
        result.set(firstLetter, [term]);
    }
    return result;
}, new Map<string, CollectionEntry<"glossary">[]>());
---

<p>Here are the glossary terms, ordered alphabetically:</p>

<ol>
    {
        [...glossaryTermsByLetter.keys()].sort().map((letter) => (
            <li>
                <h1 id={`letter-${letter.toLocaleLowerCase()}`}>{letter}</h1>
                <ol>
                    {glossaryTermsByLetter
                        .get(letter)!
                        .sort(sortAlphabetically)
                        .map((entry) => (
                            <li>
                                <Glossary word={entry.data.title} /> :{" "}
                                {entry.data.definition}
                            </li>
                        ))}
                </ol>
            </li>
        ))
    }
</ol>